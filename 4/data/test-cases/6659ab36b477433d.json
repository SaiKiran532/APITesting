{"uid":"6659ab36b477433d","name":"User Not Found","fullName":"Tests.test_regres_api#test_user_not_found","historyId":"5270bf30ac27732133591cafae0fee00","time":{"start":1717410151496,"stop":1717410151728,"duration":232},"description":"This test case handles the scenario where a user is not found in the API.","descriptionHtml":"<p>This test case handles the scenario where a user is not found in the API.</p>\n","status":"failed","statusMessage":"AssertionError: Expected status_code: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"@allure.title(\"User Not Found\")\n    @allure.description(\"This test case handles the scenario where a user is not found in the API.\")\n    @allure.tag(\"API\", \"GET\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.label(\"component\", \"user\")\n    @allure.link(\"https://reqres.in/api/users/23\", name=\"User Not Found\")\n    @allure.testcase(\"TESTCASE-3\", \"Test case description for User Not Found\")\n    @allure.epic(\"User Management\")\n    @allure.feature(\"GET Requests\")\n    @allure.story(\"Handle user not found\")\n    def test_user_not_found():\n        url = base_url + \"/api/users/23\"\n        print(\"get url: \" + url)\n        response = requests.get(url)\n>       assert response.status_code == 200, \"Expected status_code: 404\"\nE       AssertionError: Expected status_code: 404\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\nTests/test_regres_api.py:67: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test case handles the scenario where a user is not found in the API.","status":"failed","statusMessage":"AssertionError: Expected status_code: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"@allure.title(\"User Not Found\")\n    @allure.description(\"This test case handles the scenario where a user is not found in the API.\")\n    @allure.tag(\"API\", \"GET\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.label(\"component\", \"user\")\n    @allure.link(\"https://reqres.in/api/users/23\", name=\"User Not Found\")\n    @allure.testcase(\"TESTCASE-3\", \"Test case description for User Not Found\")\n    @allure.epic(\"User Management\")\n    @allure.feature(\"GET Requests\")\n    @allure.story(\"Handle user not found\")\n    def test_user_not_found():\n        url = base_url + \"/api/users/23\"\n        print(\"get url: \" + url)\n        response = requests.get(url)\n>       assert response.status_code == 200, \"Expected status_code: 404\"\nE       AssertionError: Expected status_code: 404\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\nTests/test_regres_api.py:67: AssertionError","steps":[],"attachments":[{"uid":"57c8815de51d30d6","name":"stdout","source":"57c8815de51d30d6.txt","type":"text/plain","size":40}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"Handle user not found"},{"name":"component","value":"user"},{"name":"tag","value":"API"},{"name":"severity","value":"minor"},{"name":"epic","value":"User Management"},{"name":"tag","value":"GET"},{"name":"feature","value":"GET Requests"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_regres_api"},{"name":"host","value":"fv-az891-548"},{"name":"thread","value":"2800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_regres_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"Test case description for User Not Found","url":"TESTCASE-3","type":"tms"},{"name":"User Not Found","url":"https://reqres.in/api/users/23","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"515076fd4f938dc2","reportUrl":"https://SaiKiran532.github.io/APITesting/3//#testresult/515076fd4f938dc2","status":"passed","time":{"start":1717404091435,"stop":1717404091676,"duration":241}},{"uid":"4afe13664352151e","reportUrl":"https://SaiKiran532.github.io/APITesting/2//#testresult/4afe13664352151e","status":"passed","time":{"start":1717403801455,"stop":1717403801697,"duration":242}},{"uid":"47b270da45d5cf08","reportUrl":"https://SaiKiran532.github.io/APITesting/1//#testresult/47b270da45d5cf08","status":"passed","time":{"start":1717166142584,"stop":1717166142942,"duration":358}}]},"tags":["GET","API"]},"source":"6659ab36b477433d.json","parameterValues":[]}